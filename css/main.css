/* Importing Anton font for headings */
@import url('https://fonts.googleapis.com/css2?family=Anton&display=swap');


html {
  box-sizing: border-box;  /* Applies border-box sizing to all elements for consistent layout */
}

*, *:before, *:after {
  box-sizing: inherit;  /* Inherit border-box from html element */
}

body {
  font-family: Verdana, Tahoma, sans-serif;  /* Sets default font for body */
  margin: 0;  /* Removes default margin */
  line-height: 1.4;  /* Improves readability by spacing lines */
}

img {
  width: 100%; /* Prevents images from overflowing their container */

  height: auto; /* Maintains aspect ratio */

  display: block; /* Prevents extra space below image and allows it to fully respect width/height settings */

}

h1, h2, h3, button {
   /* Applies google font */
  font-family: "Anton", sans-serif;
}


/* For font sizes I used a type scale. We will be covering this again in a future class. You should be using rems instead of px for font sizes.*/

h1 {
  color: white; /* White text */

  font-size: 4.209rem;  /* 4.209 * 16 = 67.34px */
  
  text-align: center; /* Centers text */
  
  text-shadow: 2px 3px 4px rgba(0,0,0,0.6); /* Adds drop shadow for readability */
}

h2 {
  color: #f54f95;/* Brand pink text */
  
  font-size: 3.157rem;  /* 3.157 * 16 = 50.5px */
  
  margin-top: 0; /* Removes default margin on top only */

}

h3 {
  font-size: 2.369rem;  /* 3.157 * 16 = 37.9px */
  
  text-transform: uppercase; /* Makes text uppercase */
  
  margin: 0; /* Removes margin */

}

.wrapper {
  max-width: 1200px; /* Limits width of content */

  margin: 0 auto; /* Centers wrapper */

  padding: 0 1em; /* Adds padding left/right */

}

header .wrapper {
  display: flex; /* Defines header wrapper as a flex container */

  justify-content: space-between; /* Applies all extra space between the logo and navigation */

  align-items: center; /* Aligns logo and navigation vertically */

}

#logo {
  width: 80px; /* Sets logo width */

}

header nav ul {
  list-style: none; /* Removes bullets */

  padding-left: 0; /* Remove default padding on left */

  display: flex; /* Defines nav ul as a flex container and brings list items up on one row */

}

header nav ul a {
  display: inline-block; 
  
  background-color: #f54f95; /* Brand pink background */

  color: white; /* White text */

  padding: .5em 1em; /* Spacing inside button */

  text-decoration: none; /* Removes underline */

  margin-left: 1em; /* Adds space between nav links */

  border: 1px solid #f54f95; /* Adds a button border */

}

header nav ul a:hover,
header nav ul a:focus {
  /* Inverts colors on hover/focus */
  background-color: white;
  color: #f54f95;
}

#hero {
  height: 60vh; /* Sets hero section height to 60% of viewport height */

  background-color: #f54f95; /* Background color fallback in case image doesn't load */

  background-image: url(../images/hero-donuts.jpg); /* Path to background image */

  background-size: cover; /* Scales image to cover area */
  
  background-position: center; /* Centers image */

  /* Center heading horizontally and vertically within hero */
  display: flex;
  justify-content: center;
  align-items: center;

}

section {
  padding: 4em 0; /* Add space on top and bottom of section 4 * 16 = 64px */

}

.product-container { 
  display: grid; /* Defining container as a grid - will not visually change on the page but will introduce grid lines */

  grid-template-columns: 1fr; /* 1 column by default */

  gap: 1em; /* Space between items */

}

.product-card {
  border-radius: 14px; /* Rounded corners */
  
  padding: 2em 1.25em; /* Add space between content and border of card */
  
  text-align: center; /* Center content */
  
  color: white; /* White text */

  display: flex; /* This makes the product card a flex container so that you have additional alignment and distribution properties available for use */

  flex-direction: column; /* By default, items are laid out in a row so setting to column will stack items vertically */
  
  align-items: center; /* Fixes button from stretching */

}

/* Custom colors for each card */
.product-card:nth-child(1) {
  background-color: #E1729A;
}

.product-card:nth-child(2) {
  background-color: #C78E62;
}

.product-card:nth-child(3) {
  background-color: #5ac93c;
  background-color: #F1AD2C;
}

.product-card:nth-child(4) {
  background-color: #2CD39C;
}

.product-card p {
  margin: .5em 0; /* Removes a bit of space between paragraphs */

}

.product-card p.price {
  font-weight: bold; /* Highlights price */

  margin-top: 0; /* Removes margin on top */

  margin-bottom: 1.125rem; /* Adds space below price */
}

.product-card button {
  display: inline-block;

  background-color: white;

  color: #f54f95;

  font-size: 1.125rem;  /* 1.125 * 16 = 18px */
  
  border: none; /* Removes default border */
  
  padding: .5em 1.5em;

  border-radius: 20px;
  
  cursor: pointer; /* Adds pointer cursor on hover */
  
  margin-top: auto; /* Pushes button to bottom of flex container */

}

.product-card button:hover,
.product-card button:focus {
  /* Inverts colors */
  background-color: #f54f95;
  color: white;
  
}

footer {
  background-color: #f54f95;
  padding: .5em 0;
  text-align: center;
  color: white;
}


/* Media queries */

/*
  Media queries use em units instead of px for better accessibility and scalability. 
  Since ems scale with the root font size, they respect user settings and adjust more naturally 
  across different devices and browsers. 1em = 16px by default, so 600px = 37.5em, 1080px = 67.5em
*/

/* Apply a media query for min-width of 37.5em to adjust the logo size and adjust product container to two columns */


@media (min-width: 37.5em ){
  #logo {
  width: 120px;  
  }

  .product-container {
    grid-template-columns: repeat(2, 1fr);  
  }
  }

  /* #logo {
    width: 120px;  
  }

  .product-container {
    grid-template-columns: repeat(2, 1fr);  
  } */



/* Apply a media query for min-width of 67.5em to adjust product container to four columns */
 
@media (min-width: 67.5em){
   .product-container {
    grid-template-columns: repeat(4, 1fr); 
  }
}

  /* .product-container {
    grid-template-columns: repeat(4, 1fr); 
  } */








